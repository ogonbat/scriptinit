#!/bin/bash

# The instructions in this file are extracted from
# 'Beyond Linux From Scratch' (2017-04-29 / r18652) but are modified for use
# with LFScript 4 which installs the software to a fake root directory.
#
# Beyond Linux From Scratch is released under the MIT license.
# Copyright (C) 2001-2017, The BLFS Development Team

WGETLIST="http://linux-pam.org/library/Linux-PAM-1.3.0.tar.bz2
          http://linux-pam.org/documentation/Linux-PAM-1.2.0-docs.tar.bz2"
MD5SUMLIST="da4b2289b7cfb19583d54e9eaaef1c3a
            558378b8be9b8b5c987326f4529f2130"

###############################################
installation() { # INSTALLING SYSTEM SOFTWARE #
###############################################

tar -xf ../Linux-PAM-1.2.0-docs.tar.bz2 --strip-components=1

./configure --prefix=/usr                    \
            --sysconfdir=/etc                \
            --libdir=/usr/lib                \
            --disable-regenerate-docu        \
            --enable-securedir=/lib/security \
            --docdir=/usr/share/doc/Linux-PAM-1.3.0
make

install -v -m755 -d ${FAKEROOT}/etc/pam.d

cat > ${FAKEROOT}/etc/pam.d/other << "EOF"
auth     required       pam_deny.so
account  required       pam_deny.so
password required       pam_deny.so
session  required       pam_deny.so
EOF

rm -fv ${FAKEROOT}/etc/pam.d/*

make DESTDIR=${FAKEROOT} install
chmod -v 4755 ${FAKEROOT}/sbin/unix_chkpwd

for file in pam pam_misc pamc
do
  mv -v ${FAKEROOT}/usr/lib/lib${file}.so.* ${FAKEROOT}/lib
  ln -sfv ../../lib/$(readlink ${FAKEROOT}/usr/lib/lib${file}.so) ${FAKEROOT}/usr/lib/lib${file}.so
done

install -vdm755 ${FAKEROOT}/etc/pam.d
cat > ${FAKEROOT}/etc/pam.d/system-account << "EOF"
# Begin /etc/pam.d/system-account

account   required    pam_unix.so

# End /etc/pam.d/system-account
EOF

cat > ${FAKEROOT}/etc/pam.d/system-auth << "EOF"
# Begin /etc/pam.d/system-auth

auth      required    pam_unix.so

# End /etc/pam.d/system-auth
EOF

cat > ${FAKEROOT}/etc/pam.d/system-session << "EOF"
# Begin /etc/pam.d/system-session

session   required    pam_unix.so

# End /etc/pam.d/system-session
EOF

cat > ${FAKEROOT}/etc/pam.d/system-password << "EOF"
# Begin /etc/pam.d/system-password

# check new passwords for strength (man pam_cracklib)
password  required    pam_cracklib.so   type=Linux retry=3 difok=5 \
                                        difignore=23 minlen=9 dcredit=1 \
                                        ucredit=1 lcredit=1 ocredit=1 \
                                        dictpath=/lib/cracklib/pw_dict
# use sha512 hash for encryption, use shadow, and use the
# authentication token (chosen password) set by pam_cracklib
# above (or any previous modules)
password  required    pam_unix.so       sha512 shadow use_authtok

# End /etc/pam.d/system-password
EOF

cat > ${FAKEROOT}/etc/pam.d/system-password << "EOF"
# Begin /etc/pam.d/system-password

# use sha512 hash for encryption, use shadow, and try to use any previously
# defined authentication token (chosen password) set by any prior module
password  required    pam_unix.so       sha512 shadow try_first_pass

# End /etc/pam.d/system-password
EOF

cat > ${FAKEROOT}/etc/pam.d/other << "EOF"
# Begin /etc/pam.d/other

auth        required        pam_warn.so
auth        required        pam_deny.so
account     required        pam_warn.so
account     required        pam_deny.so
password    required        pam_warn.so
password    required        pam_deny.so
session     required        pam_warn.so
session     required        pam_deny.so

# End /etc/pam.d/other
EOF

#################
} # END OF FILE #
#################

